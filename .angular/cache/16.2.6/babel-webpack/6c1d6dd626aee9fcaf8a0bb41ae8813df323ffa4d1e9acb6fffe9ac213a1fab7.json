{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class User {\n  constructor(name, isAuthorized = false) {\n    this.name = name;\n    this.isAuthorized = isAuthorized;\n  }\n}\n// TODO: get the user; don't 'new' it.\nconst alice = new User('Alice', true);\nconst bob = new User('Bob', false);\nexport class UserService {\n  constructor() {\n    this.user = bob; // initial user is Bob\n  }\n  // swap users\n  getNewUser() {\n    return this.user = this.user === bob ? alice : bob;\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["User","constructor","name","isAuthorized","alice","bob","UserService","user","getNewUser","_","_2","factory","ɵfac","providedIn"],"sources":["/home/kumar007ambi/pp4vq4/src/app/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nexport class User {\r\n  constructor(\r\n    public name: string,\r\n    public isAuthorized = false) { }\r\n}\r\n\r\n// TODO: get the user; don't 'new' it.\r\nconst alice = new User('Alice', true);\r\nconst bob = new User('Bob', false);\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  user = bob;  // initial user is Bob\r\n\r\n  // swap users\r\n  getNewUser() {\r\n    return this.user = this.user === bob ? alice : bob;\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/"],"mappings":";AAEA,OAAM,MAAOA,IAAI;EACfC,YACSC,IAAY,EACZC,YAAA,GAAe,KAAK;IADpB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;EAAY;;AAGnC;AACA,MAAMC,KAAK,GAAG,IAAIJ,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC;AACrC,MAAMK,GAAG,GAAG,IAAIL,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;AAKlC,OAAM,MAAOM,WAAW;EAHxBL,YAAA;IAIE,KAAAM,IAAI,GAAGF,GAAG,CAAC,CAAE;;EAEb;EACAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACD,IAAI,GAAG,IAAI,CAACA,IAAI,KAAKF,GAAG,GAAGD,KAAK,GAAGC,GAAG;EACpD;EAAC,QAAAI,CAAA,G;qBANUH,WAAW;EAAA;EAAA,QAAAI,EAAA,G;WAAXJ,WAAW;IAAAK,OAAA,EAAXL,WAAW,CAAAM,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}