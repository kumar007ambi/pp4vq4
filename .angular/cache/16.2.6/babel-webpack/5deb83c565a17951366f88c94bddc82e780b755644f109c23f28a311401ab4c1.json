{"ast":null,"code":"import { APP_CONFIG, HERO_DI_CONFIG } from './app.config';\nimport { heroServiceProvider } from './heroes/hero.service.provider';\nimport { Logger } from './logger.service';\nimport { UserService } from './user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./logger.service\";\nimport * as i2 from \"./user.service\";\nimport * as i3 from \"./heroes/hero.service\";\nconst template = '{{log}}';\nexport class Provider1Component {\n  constructor(logger) {\n    logger.log('Hello from logger provided with Logger class');\n    this.log = logger.logs[0];\n  }\n  static #_ = this.ɵfac = function Provider1Component_Factory(t) {\n    return new (t || Provider1Component)(i0.ɵɵdirectiveInject(i1.Logger));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider1Component,\n    selectors: [[\"provider-1\"]],\n    features: [i0.ɵɵProvidersFeature([Logger])],\n    decls: 1,\n    vars: 1,\n    template: function Provider1Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\n//////////////////////////////////////////\nexport class Provider3Component {\n  constructor(logger) {\n    logger.log('Hello from logger provided with useClass:Logger');\n    this.log = logger.logs[0];\n  }\n  static #_ = this.ɵfac = function Provider3Component_Factory(t) {\n    return new (t || Provider3Component)(i0.ɵɵdirectiveInject(i1.Logger));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider3Component,\n    selectors: [[\"provider-3\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Logger,\n      useClass: Logger\n    }])],\n    decls: 1,\n    vars: 1,\n    template: function Provider3Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\n//////////////////////////////////////////\nexport class BetterLogger extends Logger {}\nexport class Provider4Component {\n  constructor(logger) {\n    logger.log('Hello from logger provided with useClass:BetterLogger');\n    this.log = logger.logs[0];\n  }\n  static #_ = this.ɵfac = function Provider4Component_Factory(t) {\n    return new (t || Provider4Component)(i0.ɵɵdirectiveInject(i1.Logger));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider4Component,\n    selectors: [[\"provider-4\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Logger,\n      useClass: BetterLogger\n    }])],\n    decls: 1,\n    vars: 1,\n    template: function Provider4Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\n//////////////////////////////////////////\nexport class EvenBetterLogger extends Logger {\n  constructor(userService) {\n    super();\n    this.userService = userService;\n  }\n  log(message) {\n    const name = this.userService.user.name;\n    super.log(`Message to ${name}: ${message}`);\n  }\n  static #_ = this.ɵfac = function EvenBetterLogger_Factory(t) {\n    return new (t || EvenBetterLogger)(i0.ɵɵinject(i2.UserService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EvenBetterLogger,\n    factory: EvenBetterLogger.ɵfac\n  });\n}\nexport class Provider5Component {\n  constructor(logger) {\n    logger.log('Hello from EvenBetterlogger');\n    this.log = logger.logs[0];\n  }\n  static #_ = this.ɵfac = function Provider5Component_Factory(t) {\n    return new (t || Provider5Component)(i0.ɵɵdirectiveInject(i1.Logger));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider5Component,\n    selectors: [[\"provider-5\"]],\n    features: [i0.ɵɵProvidersFeature([UserService, {\n      provide: Logger,\n      useClass: EvenBetterLogger\n    }])],\n    decls: 1,\n    vars: 1,\n    template: function Provider5Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\n//////////////////////////////////////////\nexport class NewLogger extends Logger {}\nexport class OldLogger {\n  constructor() {\n    this.logs = [];\n  }\n  log(message) {\n    throw new Error('Should not call the old logger!');\n  }\n}\nexport class Provider6aComponent {\n  constructor(newLogger, oldLogger) {\n    if (newLogger === oldLogger) {\n      throw new Error('expected the two loggers to be different instances');\n    }\n    oldLogger.log('Hello OldLogger (but we want NewLogger)');\n    // The newLogger wasn't called so no logs[]\n    // display the logs of the oldLogger.\n    this.log = newLogger.logs[0] || oldLogger.logs[0];\n  }\n  static #_ = this.ɵfac = function Provider6aComponent_Factory(t) {\n    return new (t || Provider6aComponent)(i0.ɵɵdirectiveInject(NewLogger), i0.ɵɵdirectiveInject(OldLogger));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider6aComponent,\n    selectors: [[\"provider-6a\"]],\n    features: [i0.ɵɵProvidersFeature([NewLogger,\n    // Not aliased! Creates two instances of `NewLogger`\n    {\n      provide: OldLogger,\n      useClass: NewLogger\n    }])],\n    decls: 1,\n    vars: 1,\n    template: function Provider6aComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\nexport class Provider6bComponent {\n  constructor(newLogger, oldLogger) {\n    if (newLogger !== oldLogger) {\n      throw new Error('expected the two loggers to be the same instance');\n    }\n    oldLogger.log('Hello from NewLogger (via aliased OldLogger)');\n    this.log = newLogger.logs[0];\n  }\n  static #_ = this.ɵfac = function Provider6bComponent_Factory(t) {\n    return new (t || Provider6bComponent)(i0.ɵɵdirectiveInject(NewLogger), i0.ɵɵdirectiveInject(OldLogger));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider6bComponent,\n    selectors: [[\"provider-6b\"]],\n    features: [i0.ɵɵProvidersFeature([NewLogger,\n    // Alias OldLogger w/ reference to NewLogger\n    {\n      provide: OldLogger,\n      useExisting: NewLogger\n    }])],\n    decls: 1,\n    vars: 1,\n    template: function Provider6bComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\n//////////////////////////////////////////\n// An object in the shape of the logger service\nfunction silentLoggerFn() {}\nexport const SilentLogger = {\n  logs: ['Silent logger says \"Shhhhh!\". Provided via \"useValue\"'],\n  log: silentLoggerFn\n};\nexport class Provider7Component {\n  constructor(logger) {\n    logger.log('Hello from logger provided with useValue');\n    this.log = logger.logs[0];\n  }\n  static #_ = this.ɵfac = function Provider7Component_Factory(t) {\n    return new (t || Provider7Component)(i0.ɵɵdirectiveInject(i1.Logger));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider7Component,\n    selectors: [[\"provider-7\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Logger,\n      useValue: SilentLogger\n    }])],\n    decls: 1,\n    vars: 1,\n    template: function Provider7Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\n/////////////////\nexport class Provider8Component {\n  constructor(heroService) {\n    // must be true else this component would have blown up at runtime\n    this.log = 'Hero service injected successfully via heroServiceProvider';\n  }\n  static #_ = this.ɵfac = function Provider8Component_Factory(t) {\n    return new (t || Provider8Component)(i0.ɵɵdirectiveInject(i3.HeroService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider8Component,\n    selectors: [[\"provider-8\"]],\n    features: [i0.ɵɵProvidersFeature([heroServiceProvider, Logger, UserService])],\n    decls: 1,\n    vars: 1,\n    template: function Provider8Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\n/////////////////\nexport class Provider9Component {\n  /*\n   // Can't inject using the interface as the parameter type\n   constructor(private config: AppConfig){ }\n   */\n  constructor(config) {\n    this.config = config;\n    this.log = '';\n  }\n  ngOnInit() {\n    this.log = 'APP_CONFIG Application title is ' + this.config.title;\n  }\n  static #_ = this.ɵfac = function Provider9Component_Factory(t) {\n    return new (t || Provider9Component)(i0.ɵɵdirectiveInject(APP_CONFIG));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider9Component,\n    selectors: [[\"provider-9\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: APP_CONFIG,\n      useValue: HERO_DI_CONFIG\n    }])],\n    decls: 1,\n    vars: 1,\n    template: function Provider9Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\nconst someMessage = 'Hello from the injected logger';\nexport class Provider10Component {\n  constructor(logger) {\n    this.logger = logger;\n    this.log = '';\n    if (this.logger) {\n      this.logger.log(someMessage);\n    }\n  }\n  ngOnInit() {\n    this.log = this.logger ? this.logger.logs[0] : 'Optional logger was not available';\n  }\n  static #_ = this.ɵfac = function Provider10Component_Factory(t) {\n    return new (t || Provider10Component)(i0.ɵɵdirectiveInject(i1.Logger, 8));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Provider10Component,\n    selectors: [[\"provider-10\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: Logger,\n      useValue: null\n    }])],\n    decls: 1,\n    vars: 1,\n    template: function Provider10Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.log);\n      }\n    },\n    encapsulation: 2\n  });\n}\n/////////////////\nexport class ProvidersComponent {\n  static #_ = this.ɵfac = function ProvidersComponent_Factory(t) {\n    return new (t || ProvidersComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProvidersComponent,\n    selectors: [[\"app-providers\"]],\n    decls: 22,\n    vars: 0,\n    consts: [[\"id\", \"p1\"], [\"id\", \"p3\"], [\"id\", \"p4\"], [\"id\", \"p5\"], [\"id\", \"p6a\"], [\"id\", \"p6b\"], [\"id\", \"p7\"], [\"id\", \"p8\"], [\"id\", \"p9\"], [\"id\", \"p10\"]],\n    template: function ProvidersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Provider variations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵelement(3, \"provider-1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 1);\n        i0.ɵɵelement(5, \"provider-3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelement(7, \"provider-4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelement(9, \"provider-5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵelement(11, \"provider-6a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵelement(13, \"provider-6b\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 6);\n        i0.ɵɵelement(15, \"provider-7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7);\n        i0.ɵɵelement(17, \"provider-8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 8);\n        i0.ɵɵelement(19, \"provider-9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 9);\n        i0.ɵɵelement(21, \"provider-10\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [Provider1Component, Provider3Component, Provider4Component, Provider5Component, Provider6aComponent, Provider6bComponent, Provider7Component, Provider8Component, Provider9Component, Provider10Component],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["APP_CONFIG","HERO_DI_CONFIG","heroServiceProvider","Logger","UserService","template","Provider1Component","constructor","logger","log","logs","_","i0","ɵɵdirectiveInject","i1","_2","selectors","features","ɵɵProvidersFeature","decls","vars","Provider1Component_Template","rf","ctx","Provider3Component","provide","useClass","Provider3Component_Template","BetterLogger","Provider4Component","Provider4Component_Template","EvenBetterLogger","userService","message","name","user","ɵɵinject","i2","factory","ɵfac","Provider5Component","Provider5Component_Template","NewLogger","OldLogger","Error","Provider6aComponent","newLogger","oldLogger","Provider6aComponent_Template","Provider6bComponent","useExisting","Provider6bComponent_Template","silentLoggerFn","SilentLogger","Provider7Component","useValue","Provider7Component_Template","Provider8Component","heroService","i3","HeroService","Provider8Component_Template","Provider9Component","config","ngOnInit","title","Provider9Component_Template","someMessage","Provider10Component","Provider10Component_Template","ProvidersComponent","consts","ProvidersComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","encapsulation"],"sources":["/home/kumar007ambi/pp4vq4/src/app/providers.component.ts"],"sourcesContent":["/*\r\n * A collection of demo components showing different ways to provide services\r\n * in @Component metadata\r\n */\r\nimport { Component, Inject, Injectable, OnInit } from '@angular/core';\r\n\r\nimport {\r\n  APP_CONFIG,\r\n  AppConfig,\r\n  HERO_DI_CONFIG } from './app.config';\r\n\r\nimport { HeroService } from './heroes/hero.service';\r\nimport { heroServiceProvider } from './heroes/hero.service.provider';\r\nimport { Logger } from './logger.service';\r\nimport { UserService } from './user.service';\r\n\r\nconst template = '{{log}}';\r\n\r\n@Component({\r\n  selector: 'provider-1',\r\n  template,\r\n  providers: [Logger]\r\n})\r\nexport class Provider1Component {\r\n  log: string;\r\n  constructor(logger: Logger) {\r\n    logger.log('Hello from logger provided with Logger class');\r\n    this.log = logger.logs[0];\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////\r\n\r\n@Component({\r\n  selector: 'provider-3',\r\n  template,\r\n  providers:\r\n    [{ provide: Logger, useClass: Logger }]\r\n})\r\nexport class Provider3Component {\r\n  log: string;\r\n  constructor(logger: Logger) {\r\n    logger.log('Hello from logger provided with useClass:Logger');\r\n    this.log = logger.logs[0];\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////\r\nexport class BetterLogger extends Logger {}\r\n\r\n@Component({\r\n  selector: 'provider-4',\r\n  template,\r\n  providers:\r\n    [{ provide: Logger, useClass: BetterLogger }]\r\n})\r\nexport class Provider4Component {\r\n  log: string;\r\n  constructor(logger: Logger) {\r\n    logger.log('Hello from logger provided with useClass:BetterLogger');\r\n    this.log = logger.logs[0];\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////\r\n\r\n@Injectable()\r\nexport class EvenBetterLogger extends Logger {\r\n  constructor(private userService: UserService) { super(); }\r\n\r\n  override log(message: string) {\r\n    const name = this.userService.user.name;\r\n    super.log(`Message to ${name}: ${message}`);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'provider-5',\r\n  template,\r\n  providers:\r\n    [ UserService,\r\n      { provide: Logger, useClass: EvenBetterLogger }]\r\n})\r\nexport class Provider5Component {\r\n  log: string;\r\n  constructor(logger: Logger) {\r\n    logger.log('Hello from EvenBetterlogger');\r\n    this.log = logger.logs[0];\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////\r\n\r\nexport class NewLogger extends Logger {}\r\n\r\nexport class OldLogger {\r\n  logs: string[] = [];\r\n  log(message: string) {\r\n    throw new Error('Should not call the old logger!');\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'provider-6a',\r\n  template,\r\n  providers:\r\n    [ NewLogger,\r\n      // Not aliased! Creates two instances of `NewLogger`\r\n      { provide: OldLogger, useClass: NewLogger}]\r\n})\r\nexport class Provider6aComponent {\r\n  log: string;\r\n  constructor(newLogger: NewLogger, oldLogger: OldLogger) {\r\n    if (newLogger === oldLogger) {\r\n      throw new Error('expected the two loggers to be different instances');\r\n    }\r\n    oldLogger.log('Hello OldLogger (but we want NewLogger)');\r\n    // The newLogger wasn't called so no logs[]\r\n    // display the logs of the oldLogger.\r\n    this.log = newLogger.logs[0] || oldLogger.logs[0];\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'provider-6b',\r\n  template,\r\n  providers:\r\n    [ NewLogger,\r\n      // Alias OldLogger w/ reference to NewLogger\r\n      { provide: OldLogger, useExisting: NewLogger}]\r\n})\r\nexport class Provider6bComponent {\r\n  log: string;\r\n  constructor(newLogger: NewLogger, oldLogger: OldLogger) {\r\n    if (newLogger !== oldLogger) {\r\n      throw new Error('expected the two loggers to be the same instance');\r\n    }\r\n    oldLogger.log('Hello from NewLogger (via aliased OldLogger)');\r\n    this.log = newLogger.logs[0];\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////\r\n\r\n// An object in the shape of the logger service\r\nfunction silentLoggerFn() {}\r\n\r\nexport const SilentLogger = {\r\n  logs: ['Silent logger says \"Shhhhh!\". Provided via \"useValue\"'],\r\n  log: silentLoggerFn\r\n};\r\n\r\n@Component({\r\n  selector: 'provider-7',\r\n  template,\r\n  providers:\r\n    [{ provide: Logger, useValue: SilentLogger }]\r\n})\r\nexport class Provider7Component {\r\n  log: string;\r\n  constructor(logger: Logger) {\r\n    logger.log('Hello from logger provided with useValue');\r\n    this.log = logger.logs[0];\r\n  }\r\n}\r\n\r\n/////////////////\r\n\r\n@Component({\r\n  selector: 'provider-8',\r\n  template,\r\n  providers: [heroServiceProvider, Logger, UserService]\r\n})\r\nexport class Provider8Component {\r\n  // must be true else this component would have blown up at runtime\r\n  log = 'Hero service injected successfully via heroServiceProvider';\r\n\r\n  constructor(heroService: HeroService) { }\r\n}\r\n\r\n/////////////////\r\n\r\n@Component({\r\n  selector: 'provider-9',\r\n  template,\r\n  /*\r\n   // Can't use interface as provider token\r\n   [{ provide: AppConfig, useValue: HERO_DI_CONFIG })]\r\n   */\r\n  providers: [{ provide: APP_CONFIG, useValue: HERO_DI_CONFIG }]\r\n})\r\nexport class Provider9Component implements OnInit {\r\n  log = '';\r\n  /*\r\n   // Can't inject using the interface as the parameter type\r\n   constructor(private config: AppConfig){ }\r\n   */\r\n  constructor(@Inject(APP_CONFIG) private config: AppConfig) { }\r\n\r\n  ngOnInit() {\r\n     this.log = 'APP_CONFIG Application title is ' + this.config.title;\r\n  }\r\n}\r\n\r\n//////////////////////////////////////////\r\n// Sample providers 1 to 7 illustrate a required logger dependency.\r\n// Optional logger, can be null\r\nimport { Optional } from '@angular/core';\r\n\r\nconst someMessage = 'Hello from the injected logger';\r\n\r\n@Component({\r\n  selector: 'provider-10',\r\n  template,\r\n  providers: [{ provide: Logger, useValue: null }]\r\n})\r\nexport class Provider10Component implements OnInit {\r\n  log = '';\r\n  constructor(@Optional() private logger?: Logger) {\r\n    if (this.logger) {\r\n      this.logger.log(someMessage);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.log = this.logger ? this.logger.logs[0] : 'Optional logger was not available';\r\n  }\r\n}\r\n\r\n/////////////////\r\n\r\n@Component({\r\n  selector: 'app-providers',\r\n  template: `\r\n  <h2>Provider variations</h2>\r\n  <div id=\"p1\"><provider-1></provider-1></div>\r\n  <div id=\"p3\"><provider-3></provider-3></div>\r\n  <div id=\"p4\"><provider-4></provider-4></div>\r\n  <div id=\"p5\"><provider-5></provider-5></div>\r\n  <div id=\"p6a\"><provider-6a></provider-6a></div>\r\n  <div id=\"p6b\"><provider-6b></provider-6b></div>\r\n  <div id=\"p7\"><provider-7></provider-7></div>\r\n  <div id=\"p8\"><provider-8></provider-8></div>\r\n  <div id=\"p9\"><provider-9></provider-9></div>\r\n  <div id=\"p10\"><provider-10></provider-10></div>\r\n  `\r\n})\r\nexport class ProvidersComponent { }\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}