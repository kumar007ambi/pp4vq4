{"ast":null,"code":"import { Car, Engine, Tires } from './car/car';\nimport { HeroService } from './heroes/hero.service';\nimport { heroServiceProvider } from './heroes/hero.service.provider';\nimport { Logger } from './logger.service';\nimport * as i0 from \"@angular/core\";\nexport class InjectorComponent {\n  constructor(injector) {\n    this.injector = injector;\n    this.car = this.injector.get(Car);\n    this.heroService = this.injector.get(HeroService);\n    this.hero = this.heroService.getHeroes()[0];\n  }\n  get rodent() {\n    const rousDontExist = \"R.O.U.S.'s? I don't think they exist!\";\n    return this.injector.get(ROUS, rousDontExist);\n  }\n  static #_ = this.ɵfac = function InjectorComponent_Factory(t) {\n    return new (t || InjectorComponent)(i0.ɵɵdirectiveInject(i0.Injector));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InjectorComponent,\n    selectors: [[\"app-injectors\"]],\n    features: [i0.ɵɵProvidersFeature([Car, Engine, Tires, heroServiceProvider, Logger])],\n    decls: 8,\n    vars: 3,\n    consts: [[\"id\", \"car\"], [\"id\", \"hero\"], [\"id\", \"rodent\"]],\n    template: function InjectorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Other Injections\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 1);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.car.drive());\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hero.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.rodent);\n      }\n    },\n    encapsulation: 2\n  });\n}\n/**\n * R.O.U.S. - Rodents Of Unusual Size\n * // https://www.youtube.com/watch?v=BOv5ZjAOpC8\n */\nclass ROUS {}","map":{"version":3,"names":["Car","Engine","Tires","HeroService","heroServiceProvider","Logger","InjectorComponent","constructor","injector","car","get","heroService","hero","getHeroes","rodent","rousDontExist","ROUS","_","i0","ɵɵdirectiveInject","Injector","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","InjectorComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","drive","name"],"sources":["/home/kumar007ambi/pp4vq4/src/app/injector.component.ts"],"sourcesContent":["import { Component, Injector } from '@angular/core';\r\n\r\nimport { Car, Engine, Tires } from './car/car';\r\nimport { Hero } from './heroes/hero';\r\nimport { HeroService } from './heroes/hero.service';\r\nimport { heroServiceProvider } from './heroes/hero.service.provider';\r\nimport { Logger } from './logger.service';\r\n\r\n@Component({\r\n  selector: 'app-injectors',\r\n  template: `\r\n  <h2>Other Injections</h2>\r\n  <div id=\"car\">{{car.drive()}}</div>\r\n  <div id=\"hero\">{{hero.name}}</div>\r\n  <div id=\"rodent\">{{rodent}}</div>\r\n  `,\r\n  providers: [Car, Engine, Tires, heroServiceProvider, Logger]\r\n})\r\nexport class InjectorComponent {\r\n  car: Car;\r\n\r\n  heroService: HeroService;\r\n  hero: Hero;\r\n\r\n  constructor(private injector: Injector) {\r\n    this.car = this.injector.get(Car);\r\n    this.heroService = this.injector.get(HeroService);\r\n    this.hero = this.heroService.getHeroes()[0];\r\n  }\r\n\r\n  get rodent() {\r\n    const rousDontExist = \"R.O.U.S.'s? I don't think they exist!\";\r\n    return this.injector.get(ROUS, rousDontExist);\r\n  }\r\n}\r\n\r\n/**\r\n * R.O.U.S. - Rodents Of Unusual Size\r\n * // https://www.youtube.com/watch?v=BOv5ZjAOpC8\r\n */\r\nclass ROUS { }\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/"],"mappings":"AAEA,SAASA,GAAG,EAAEC,MAAM,EAAEC,KAAK,QAAQ,WAAW;AAE9C,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,MAAM,QAAQ,kBAAkB;;AAYzC,OAAM,MAAOC,iBAAiB;EAM5BC,YAAoBC,QAAkB;IAAlB,KAAAA,QAAQ,GAARA,QAAQ;IAC1B,IAAI,CAACC,GAAG,GAAG,IAAI,CAACD,QAAQ,CAACE,GAAG,CAACV,GAAG,CAAC;IACjC,IAAI,CAACW,WAAW,GAAG,IAAI,CAACH,QAAQ,CAACE,GAAG,CAACP,WAAW,CAAC;IACjD,IAAI,CAACS,IAAI,GAAG,IAAI,CAACD,WAAW,CAACE,SAAS,EAAE,CAAC,CAAC,CAAC;EAC7C;EAEA,IAAIC,MAAMA,CAAA;IACR,MAAMC,aAAa,GAAG,uCAAuC;IAC7D,OAAO,IAAI,CAACP,QAAQ,CAACE,GAAG,CAACM,IAAI,EAAED,aAAa,CAAC;EAC/C;EAAC,QAAAE,CAAA,G;qBAfUX,iBAAiB,EAAAY,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,QAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBf,iBAAiB;IAAAgB,SAAA;IAAAC,QAAA,GAAAL,EAAA,CAAAM,kBAAA,CAFjB,CAACxB,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEE,mBAAmB,EAAEC,MAAM,CAAC;IAAAoB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAL5DZ,EAAA,CAAAc,cAAA,SAAI;QAAAd,EAAA,CAAAe,MAAA,uBAAgB;QAAAf,EAAA,CAAAgB,YAAA,EAAK;QACzBhB,EAAA,CAAAc,cAAA,aAAc;QAAAd,EAAA,CAAAe,MAAA,GAAe;QAAAf,EAAA,CAAAgB,YAAA,EAAM;QACnChB,EAAA,CAAAc,cAAA,aAAe;QAAAd,EAAA,CAAAe,MAAA,GAAa;QAAAf,EAAA,CAAAgB,YAAA,EAAM;QAClChB,EAAA,CAAAc,cAAA,aAAiB;QAAAd,EAAA,CAAAe,MAAA,GAAU;QAAAf,EAAA,CAAAgB,YAAA,EAAM;;;QAFnBhB,EAAA,CAAAiB,SAAA,GAAe;QAAfjB,EAAA,CAAAkB,iBAAA,CAAAL,GAAA,CAAAtB,GAAA,CAAA4B,KAAA,GAAe;QACdnB,EAAA,CAAAiB,SAAA,GAAa;QAAbjB,EAAA,CAAAkB,iBAAA,CAAAL,GAAA,CAAAnB,IAAA,CAAA0B,IAAA,CAAa;QACXpB,EAAA,CAAAiB,SAAA,GAAU;QAAVjB,EAAA,CAAAkB,iBAAA,CAAAL,GAAA,CAAAjB,MAAA,CAAU;;;;;;AAsB7B;;;;AAIA,MAAME,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}